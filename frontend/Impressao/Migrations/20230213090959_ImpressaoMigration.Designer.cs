// <auto-generated />
using System;
using Impressao.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Impressao.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230213090959_ImpressaoMigration")]
    partial class ImpressaoMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Impressao.Models.Celula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Celula");
                });

            modelBuilder.Entity("Impressao.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CidadeIbge")
                        .HasColumnType("integer");

                    b.Property<int>("ClienteGrupoId")
                        .HasColumnType("integer");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<char>("FisicaJuridica")
                        .HasColumnType("character(1)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("text");

                    b.Property<int?>("Numero")
                        .HasColumnType("integer");

                    b.Property<string>("Observacoes")
                        .HasColumnType("text");

                    b.Property<int>("Pais")
                        .HasColumnType("integer");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone2")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClienteGrupoId")
                        .IsUnique();

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Impressao.Models.ClienteGrupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ClienteGrupo");
                });

            modelBuilder.Entity("Impressao.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Contrato")
                        .HasColumnType("text");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataFinalizado")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdCliente")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("PrevisaoEntrega")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("Impressao.Models.PedidoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAprovacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataImposicao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdProduto")
                        .HasColumnType("integer");

                    b.Property<int>("PedidoId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId")
                        .IsUnique();

                    b.ToTable("PedidoItem");
                });

            modelBuilder.Entity("Impressao.Models.PedidoItemApontamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CelulaId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataTermino")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PedidoItemId")
                        .HasColumnType("integer");

                    b.Property<int>("Sequencia")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CelulaId")
                        .IsUnique();

                    b.HasIndex("PedidoItemId")
                        .IsUnique();

                    b.ToTable("PedidoItemApontamento");
                });

            modelBuilder.Entity("Impressao.Models.PedidoItemArquivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Album")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DataUpload")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PedidoItemId")
                        .HasColumnType("integer");

                    b.Property<float>("Sequencia")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("PedidoItemId")
                        .IsUnique();

                    b.ToTable("PedidoItemArquivo");
                });

            modelBuilder.Entity("Impressao.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Altura")
                        .HasColumnType("integer");

                    b.Property<int>("AlturaMidia")
                        .HasColumnType("integer");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<int?>("DeslocamentoFrenteX")
                        .HasColumnType("integer");

                    b.Property<int?>("DeslocamentoFrenteY")
                        .HasColumnType("integer");

                    b.Property<int?>("DeslocamentoVersoX")
                        .HasColumnType("integer");

                    b.Property<int?>("DeslocamentoVersoY")
                        .HasColumnType("integer");

                    b.Property<char>("DisposicaoImagem")
                        .HasColumnType("character(1)");

                    b.Property<char>("DisposicaoImpressao")
                        .HasColumnType("character(1)");

                    b.Property<int>("Largura")
                        .HasColumnType("integer");

                    b.Property<int>("LarguraMidia")
                        .HasColumnType("integer");

                    b.Property<int?>("ProdutoGrupoId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProdutoHotFolderId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProdutoSubstratoId")
                        .HasColumnType("integer");

                    b.Property<bool>("RenomearArquivo")
                        .HasColumnType("boolean");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoGrupoId")
                        .IsUnique();

                    b.HasIndex("ProdutoHotFolderId")
                        .IsUnique();

                    b.HasIndex("ProdutoSubstratoId")
                        .IsUnique();

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("Impressao.Models.ProdutoGrupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProdutoGrupo");
                });

            modelBuilder.Entity("Impressao.Models.ProdutoHotFolder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProdutoHotFolder");
                });

            modelBuilder.Entity("Impressao.Models.ProdutoSubstrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProdutoSubstrato");
                });

            modelBuilder.Entity("Impressao.Models.TabelaPreco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<bool>("Padrao")
                        .HasColumnType("boolean");

                    b.Property<int?>("TabelaPrecoClienteId")
                        .HasColumnType("integer");

                    b.Property<int?>("TabelaPrecoProdutoId")
                        .HasColumnType("integer");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TabelaPrecoClienteId");

                    b.HasIndex("TabelaPrecoProdutoId");

                    b.ToTable("TabelaPreco");
                });

            modelBuilder.Entity("Impressao.Models.TabelaPrecoCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<bool>("Padrao")
                        .HasColumnType("boolean");

                    b.Property<int>("TabelaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("TabelaPrecoCliente");
                });

            modelBuilder.Entity("Impressao.Models.TabelaPrecoProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.Property<int>("TabelaId")
                        .HasColumnType("integer");

                    b.Property<double>("Valor")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId")
                        .IsUnique();

                    b.ToTable("TabelaPrecoProduto");
                });

            modelBuilder.Entity("Impressao.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Impressao.Models.Cliente", b =>
                {
                    b.HasOne("Impressao.Models.ClienteGrupo", null)
                        .WithOne("Cliente")
                        .HasForeignKey("Impressao.Models.Cliente", "ClienteGrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Impressao.Models.PedidoItem", b =>
                {
                    b.HasOne("Impressao.Models.Pedido", null)
                        .WithOne("PedidoItem")
                        .HasForeignKey("Impressao.Models.PedidoItem", "PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Impressao.Models.PedidoItemApontamento", b =>
                {
                    b.HasOne("Impressao.Models.Celula", null)
                        .WithOne("PedidoItemApontamento")
                        .HasForeignKey("Impressao.Models.PedidoItemApontamento", "CelulaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Impressao.Models.PedidoItem", null)
                        .WithOne("PedidoItemApontamento")
                        .HasForeignKey("Impressao.Models.PedidoItemApontamento", "PedidoItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Impressao.Models.PedidoItemArquivo", b =>
                {
                    b.HasOne("Impressao.Models.PedidoItem", null)
                        .WithOne("PedidoItemArquivo")
                        .HasForeignKey("Impressao.Models.PedidoItemArquivo", "PedidoItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Impressao.Models.Produto", b =>
                {
                    b.HasOne("Impressao.Models.ProdutoGrupo", null)
                        .WithOne("Produto")
                        .HasForeignKey("Impressao.Models.Produto", "ProdutoGrupoId");

                    b.HasOne("Impressao.Models.ProdutoHotFolder", null)
                        .WithOne("Produto")
                        .HasForeignKey("Impressao.Models.Produto", "ProdutoHotFolderId");

                    b.HasOne("Impressao.Models.ProdutoSubstrato", null)
                        .WithOne("Produto")
                        .HasForeignKey("Impressao.Models.Produto", "ProdutoSubstratoId");
                });

            modelBuilder.Entity("Impressao.Models.TabelaPreco", b =>
                {
                    b.HasOne("Impressao.Models.TabelaPrecoCliente", "TabelaPrecoCliente")
                        .WithMany()
                        .HasForeignKey("TabelaPrecoClienteId");

                    b.HasOne("Impressao.Models.TabelaPrecoProduto", "TabelaPrecoProduto")
                        .WithMany()
                        .HasForeignKey("TabelaPrecoProdutoId");

                    b.Navigation("TabelaPrecoCliente");

                    b.Navigation("TabelaPrecoProduto");
                });

            modelBuilder.Entity("Impressao.Models.TabelaPrecoCliente", b =>
                {
                    b.HasOne("Impressao.Models.Cliente", null)
                        .WithOne("TabelaPrecoCliente")
                        .HasForeignKey("Impressao.Models.TabelaPrecoCliente", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Impressao.Models.TabelaPrecoProduto", b =>
                {
                    b.HasOne("Impressao.Models.Produto", null)
                        .WithOne("TabelaPrecoProduto")
                        .HasForeignKey("Impressao.Models.TabelaPrecoProduto", "ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Impressao.Models.Celula", b =>
                {
                    b.Navigation("PedidoItemApontamento");
                });

            modelBuilder.Entity("Impressao.Models.Cliente", b =>
                {
                    b.Navigation("TabelaPrecoCliente");
                });

            modelBuilder.Entity("Impressao.Models.ClienteGrupo", b =>
                {
                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Impressao.Models.Pedido", b =>
                {
                    b.Navigation("PedidoItem");
                });

            modelBuilder.Entity("Impressao.Models.PedidoItem", b =>
                {
                    b.Navigation("PedidoItemApontamento");

                    b.Navigation("PedidoItemArquivo");
                });

            modelBuilder.Entity("Impressao.Models.Produto", b =>
                {
                    b.Navigation("TabelaPrecoProduto");
                });

            modelBuilder.Entity("Impressao.Models.ProdutoGrupo", b =>
                {
                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Impressao.Models.ProdutoHotFolder", b =>
                {
                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Impressao.Models.ProdutoSubstrato", b =>
                {
                    b.Navigation("Produto");
                });
#pragma warning restore 612, 618
        }
    }
}
